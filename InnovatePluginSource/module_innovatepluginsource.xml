<?xml version="1.0" encoding="UTF-8"?>
<project name="module_innovatepluginsource" default="compile.module.innovatepluginsource">
  <dirname property="module.innovatepluginsource.basedir" file="${ant.file.module_innovatepluginsource}"/>
  
  <property name="module.jdk.home.innovatepluginsource" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.innovatepluginsource" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.innovatepluginsource" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.innovatepluginsource" value="-encoding UTF-8 -source 6 -target 6 ${compiler.args}"/>
  
  <property name="innovatepluginsource.output.dir" value="${module.innovatepluginsource.basedir}/out/production/InnovatePluginSource"/>
  <property name="innovatepluginsource.testoutput.dir" value="${module.innovatepluginsource.basedir}/out/test/InnovatePluginSource"/>
  
  <path id="innovatepluginsource.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="innovatepluginsource.module.production.classpath">
    <path refid="${module.jdk.classpath.innovatepluginsource}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.lib1.classpath"/>
    <path refid="library.serial-port.classpath"/>
  </path>
  
  <path id="innovatepluginsource.runtime.production.module.classpath">
    <pathelement location="${innovatepluginsource.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.lib1.classpath"/>
    <path refid="library.serial-port.classpath"/>
  </path>
  
  <path id="innovatepluginsource.module.classpath">
    <path refid="${module.jdk.classpath.innovatepluginsource}"/>
    <pathelement location="${innovatepluginsource.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.lib1.classpath"/>
    <path refid="library.serial-port.classpath"/>
  </path>
  
  <path id="innovatepluginsource.runtime.module.classpath">
    <pathelement location="${innovatepluginsource.testoutput.dir}"/>
    <pathelement location="${innovatepluginsource.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.lib1.classpath"/>
    <path refid="library.serial-port.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.innovatepluginsource">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.innovatepluginsource">
    <patternset refid="excluded.from.module.innovatepluginsource"/>
  </patternset>
  
  <path id="innovatepluginsource.module.sourcepath">
    <dirset dir="${module.innovatepluginsource.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.innovatepluginsource" depends="compile.module.innovatepluginsource.production,compile.module.innovatepluginsource.tests" description="Compile module InnovatePluginSource"/>
  
  <target name="compile.module.innovatepluginsource.production" depends="register.custom.compilers" description="Compile module InnovatePluginSource; production classes">
    <mkdir dir="${innovatepluginsource.output.dir}"/>
    <javac2 destdir="${innovatepluginsource.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.innovatepluginsource}/javac">
      <compilerarg line="${compiler.args.innovatepluginsource}"/>
      <bootclasspath refid="innovatepluginsource.module.bootclasspath"/>
      <classpath refid="innovatepluginsource.module.production.classpath"/>
      <src refid="innovatepluginsource.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.innovatepluginsource"/>
    </javac2>
    
    <copy todir="${innovatepluginsource.output.dir}">
      <fileset dir="${module.innovatepluginsource.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.innovatepluginsource.tests" depends="register.custom.compilers,compile.module.innovatepluginsource.production" description="compile module InnovatePluginSource; test classes" unless="skip.tests"/>
  
  <target name="clean.module.innovatepluginsource" description="cleanup module">
    <delete dir="${innovatepluginsource.output.dir}"/>
    <delete dir="${innovatepluginsource.testoutput.dir}"/>
  </target>
</project>